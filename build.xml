<!-- $Header$ -->
<project name="PARADE" basedir="." default="compile">

	<property file="build.properties" />
	<property file="tomcat.properties" />

	<!-- Configure the directory into which the web application is built -->
	<property name="build" value="${basedir}/build" />

	<!-- Configure the context path for this application -->
	<property name="path" value="/" />
	<property name="war" value="/ROOT" />

	<!-- Configure properties to access the Manager application -->
	<property name="url" value="${tomcat.manager.url}" />
	<property name="username" value="${tomcat.username}" />
	<property name="password" value="${tomcat.password}" />

	<!-- Configure the custom Ant tasks for the Manager application 
	<taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask" />
	<taskdef name="list" classname="org.apache.catalina.ant.ListTask" />
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask" />
	<taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask" />
	<taskdef name="roles" classname="org.apache.catalina.ant.RolesTask" />
	<taskdef name="start" classname="org.apache.catalina.ant.StartTask" />
	<taskdef name="stop" classname="org.apache.catalina.ant.StopTask" />
	<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask" />-->

	<!-- the following properties should be defined
	  tomcat.home: tomcat home (in tomcat.properties)
	  temp.dir: temporary dir  (in build.properties) 
	-->
	<path id="generic.class.path">
		<fileset dir="${webapp.path}/WEB-INF/lib">
			<include name="log4j-1.2.14.jar" />
			<include name="makumba.jar" />
			<include name="freemarker.jar" />
			<include name="hibernate3.jar" />
			<include name="struts.jar" />
			<include name="parser.jar" />
			<include name="jfreechart-1.0.9.jar" />
			<include name="cewolf-1.0.jar" />
			<include name="commons-collections-3.2.jar" />
						
						
		</fileset>
		<fileset dir="lib">
			<include name="*.jar" />
			<include name="*.zip" />
		</fileset>
		<fileset dir="${tomcat.home}/common/lib">
			<include name="*.jar" />
		</fileset>
		<pathelement path="globalClasses/" />
		<pathelement path="${temp.dir}" />
		<fileset dir="${java.home}/lib/">
			<include name="rt.jar" />
		</fileset>
	</path>

	<path id="tomcat.class.path">
		<fileset dir="${java.home}/lib/">
			<include name="rt.jar" />
		</fileset>
		<fileset dir="lib">
			<include name="tomcat-bootstrap.jar" />
			<include name="servlet-api.jar" />
			<include name="commons-logging-api.jar" />
			<include name="ant-1.6.5.jar" />
			<include name="ant-launcher.jar" />
		</fileset>
		<pathelement path="globalClasses/" />
	</path>

	<target name="compile" description="compile the java files">
		<!-- antcall target="clean" / -->
		<javac srcdir="${webapp.path}/WEB-INF/classes" debug="on">
			<classpath refid="generic.class.path" />
		</javac>
	</target>

	<target name="clean" description="delete all generated and backup files">
		<mkdir dir="${webapp.path}/javadoc" />
		<mkdir dir="${basedir}/jspc" />
		<mkdir dir="globalClasses" />

		<!-- this is a bug in the karamba build.xml... the jspc directory is not always created at install or paradeInstall -->
		<delete>
			<fileset dir="${webapp.path}/WEB-INF/classes" includes="**/*.class" />
			<fileset dir="${webapp.path}/WEB-INF/classes" includes="**/*.java~" />
			<fileset dir="${webapp.path}" includes="**/*.jsp~" />
			<fileset dir="${webapp.path}/javadoc" />
			<fileset dir="globalClasses/" includes="**/*.class" />
			<fileset dir="${basedir}/jspc" />
		</delete>
	</target>

	<target name="cleanTomcat" description="cleans the tomcat, i.e. empties work/ and removes all context descriptors from conf except parade ones">
		<delete>
			<fileset dir="${basedir}/tomcat/work" />
			<fileset dir="${basedir}/tomcat/conf/Catalina/localhost/" excludes="ROOT.xml,manager.xml,tomcat-docs.xml,**/CVS"/>
		</delete>
		<mkdir dir="${tomcat.home}/work" />

	</target>

	<target name="compileWar" description="Compile web application">
		<war destfile="${build}${war}.war" webxml="WebContent/WEB-INF/web.xml" update="true">
			<fileset dir="WebContent">
				<exclude name="WebContent/WEB-INF/web.xml" />
			</fileset>
			<lib dir="WebContent/WEB-INF/lib" />
			<classes dir="${build}/classes" />
		</war>
	</target>

	<target name="deploy" description="Install web application" depends="compile">
		<deploy url="${url}" username="${username}" password="${password}" path="${path}" war="${build}${war}.war" />
	</target>

	<target name="reload" description="Reload web application" depends="compile">
		<reload url="${url}" username="${username}" password="${password}" path="${path}" />
	</target>

	<target name="undeploy" description="Remove web application">
		<undeploy url="${url}" username="${username}" password="${password}" path="${path}" />
	</target>


	<target name="prepareTomcat" description="Sets up tomcat with ParaDe-specific configuration" depends="compile">

		<!-- We also need to create a bunch of directories -->
		<mkdir dir="tomcat/webapps_dummy" />
		
		<antcall target="globalClassesCopy" />
	</target>
			
	<target name="globalClassesCopy">
		<copy toDir="globalClasses/" overwrite="true">
			<fileset dir="webapp/WEB-INF/classes">
				<include name="org/makumba/parade/tools/TriggerFilter*.class" />
				<include name="org/makumba/parade/tools/ServletRedirectionData*.class" />
				<include name="org/makumba/parade/tools/HttpServletResponseDummy*.class" />
				<include name="org/makumba/parade/tools/HttpServletRequestDummy*.class" />
				<include name="org/makumba/parade/access/ActionLogDTO*.class" />
				<!-- Needed for the DTO -->
				<include name="org/makumba/parade/model/ActionLog*.class" />
								
				<include name="org/makumba/parade/tools/ParadeConsoleHandler*.class" />
				<include name="org/makumba/parade/tools/ParadeLogFormatter*.class" />
				<include name="org/makumba/parade/tools/PerThreadPrintStream*.class" />
				
				<include name="org/makumba/parade/listeners/ParadeSessionListener*.class" />
				
				<include name="org/makumba/parade/aether/ObjectTypes*.class" />
				<include name="org/makumba/aether/UserTypes*.class" />
				
				<include name="org/makumba/commons/ServletObjects*.class" />

				
			</fileset>

			<fileset dir=".">
				<include name="logging.properties" />
			</fileset>
		</copy>
	</target>
	
	<target name="tomcat">
		<antcall target="tomcat-start" />
	</target>

	<target name="tomcat-start" depends="prepareTomcat">
		<tstamp>
			<format timezone="GMT" property="TSTAMP" pattern="yyyyMMddHHmm"/>
		</tstamp>
		<echo>Java home in build: ${java.home}</echo>
		<java classname="org.apache.catalina.startup.Bootstrap" fork="yes" classpathref="tomcat.class.path" append="true">
			<jvmarg value="-Dcatalina.home=${tomcat.home}" />
			<jvmarg value="-Dcatalina.base=tomcat" />
			<jvmarg value="-Xms512M" />
			<jvmarg value="-Xmx2048M" />
                        <jvmarg value="-XX:MaxPermSize=2048M" />
			<jvmarg value="-Djava.library.path=." />
			<jvmarg value="-Djava.util.logging.config.file=${basedir}/logging.properties" />
			<jvmarg value="-Dstartup.tstamp=${TSTAMP}" />
                        <jvmarg value="-XX:CompileCommand=exclude,com/bbn/openmap/layer/rpf/RpfFrame,decompressSubframe"/>
                        <jvmarg value="-client"/>
			<arg value="start" />
		</java>
		<!-- give tomcat time to start up -->
		<sleep seconds="5" />

	</target>

	<target name="tomcat-stop">
		<java classname="org.apache.catalina.startup.Bootstrap" fork="yes" classpathref="tomcat.class.path">
			<jvmarg value="-Dcatalina.home=${tomcat.home}" />
			<jvmarg value="-Dcatalina.base=tomcat" />
			<arg value="stop" />
		</java>
		<!-- give tomcat time to shut down -->
		<sleep seconds="5" />
	</target>



	<!-- OLD TARGETS - not necessarily in use anymore, should go away after a while -->


	<!-- copy libs to tomcat common's lib for use by webapps -->
	<target name="copyLibsToTomcat">
		<copy toDir="${tomcat.home}/common/lib" overwrite="true">
			<fileset dir="lib">
				<include name="*.jar" />
				<include name="*.zip" />
				<exclude name="makumba.jar" />
				<exclude name="antlr.jar" />
				<!-- JSTL JARs -->
				<exclude name="jstl.jar" />
				<exclude name="jstl-standard.jar" />
			</fileset>
			<fileset dir="${webapp.path}/WEB-INF/lib">
				<include name="*.jar" />
				<include name="*.zip" />
				<exclude name="makumba.jar" />
				<exclude name="antlr.jar" />
				<!-- JSTL JARs -->
				<exclude name="jstl.jar" />
				<exclude name="jstl-standard.jar" />
			</fileset>

			<fileset dir="webapp/WEB-INF/lib">
				<include name="*.jar" />
				<include name="*.zip" />
				<exclude name="makumba.jar" />
				<exclude name="antlr.jar" />
				<!-- JSTL JARs -->
				<exclude name="jstl.jar" />
				<exclude name="jstl-standard.jar" />
			</fileset>
		</copy>
	</target>
	
</project>
