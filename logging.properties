# see ${JAVA_HOME}/jre/lib/logging.properties for more details on the 
# syntax of this file. for example:
# /usr/local/java/j2sdk1.4.1/jre/lib/logging.properties
# see also documentation of the java.util.logging package
# especially Logger, LogManager, Level

# parade needs logging at the console, then it takes System.out and 
# processes it
.handlers= java.util.logging.FileHandler, org.makumba.parade.tools.ParadeConsoleHandler

#default level, inherited by all loggers that don't specify a level
.level= INFO

# parade wants the consle handler to log everything that comes in
# and leave the filtering to the loggers
org.makumba.parade.tools.ParadeConsoleHandler = FINEST

org.makumba.parade.tools.ParadeConsoleHandler.formatter = org.makumba.parade.tools.ParadeLogFormatter

java.util.logging.FileHandler = INFO
java.util.logging.FileHandler.pattern=tomcat/logs/catalina.out
java.util.logging.FileHandler.append=true
java.util.logging.FileHandler.formatter=org.makumba.parade.tools.ParadeLogFormatter


org.parade.level = INFO
org.aether.level = INFO
org.hibernate.level = INFO

#org.makumba.level = OFF
#org.makumba.query.level=FINEST

org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/].level = INFO
org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/].handlers = org.makumba.parade.tools.ParadeConsoleHandler