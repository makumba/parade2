# see ${JAVA_HOME}/jre/lib/logging.properties for more details on the 
# syntax of this file. for example:
# /usr/local/java/j2sdk1.4.1/jre/lib/logging.properties
# see also documentation of the java.util.logging package
# especially Logger, LogManager, Level

# parade needs logging at the console, then it takes System.out and 
# processes it
.handlers= java.util.logging.FileHandler, org.makumba.parade.tools.ParadeConsoleHandler

#default level, inherited by all loggers that don't specify a level
.level= INFO

# parade wants the consle handler to log everything that comes in
# and leave the filtering to the loggers
org.makumba.parade.tools.ParadeConsoleHandler = FINEST

# we could change this to something that suits us better
org.makumba.parade.tools.ParadeConsoleHandler.formatter = org.makumba.parade.tools.ParadeLogFormatter
#org.makumba.parade.tools.ParadeConsoleHandler.formatter = java.util.logging.SimpleFormatter

java.util.logging.FileHandler = INFO
java.util.logging.FileHandler.pattern=tomcat/logs/catalina.out
java.util.logging.FileHandler.append=true
java.util.logging.FileHandler.formatter=org.makumba.parade.tools.ParadeLogFormatter

# some examples of setting makumba loggers
# for documentation on makumba loggers:
#http://www.best.eu.org/makumba/api/org/makumba/MakumbaSystem.html#getMakumbaLogger(java.lang.String
# INFO level is default, but anyway
org.makumba.parade-context.parade.db.level= INFO
org.makumba.parade-context.demo-k.db.level= INFO

# examples of details
# org.makumba.parade-context.demo-k.db.update.level= FINEST
# org.makumba.parade-context.demo-k.taglib.level= FINEST
